extends RayCast3D

# Ripped from: https://www.youtube.com/watch?v=WhMfocT9l-o

"""
class_name Surfacer

var current_colliding_surface : MeshInstance3D
var surface_sound_type : String
@onready var geo = Geometry3D
@onready var body = get_parent()

var mdt_array = []

func _physics_process(delta):
	if is_colliding() and body.is_moving():
		var col = get_collider()
		if current_colliding_surface != col.get_parent() and col.get_parent() is MeshInstance3D:
			current_colliding_surface = col.get_parent()
			if current_colliding_surface.mesh.get_surface_count() == 1:
				analyse_math_path(current_colliding_surface.get_active_material(0))
				mdt_array.clear()
				return
			else:
				build_mesh_mdts()
		extract_surface_sound_type(get_collision_point())

func build_mesh_mdts():
	mdt_array.clear()
	var mesh = current_colliding_surface.mesh
	for s in mesh.get_surface_count():
		var mdt = MeshDataTool.new()
		mdt.create_from_surface(mesh, s)
		mdt_array.append(mdt)

var last_mdt : MeshDataTool = null

func extract_surface_sound_type(point):
	for mdt in mdt_array:
		if last_mdt == mdt:
			continue
		for v in range(mdt.get_vertex_count()):
			var faces = mdt.get_vertex_faces(v)
			for f in faces:
				if mdt.get_face_normal(f).dot(Vector3.UP) < 0.1:
					continue
				var tri = [mdt.get_vertex(mdt.get_face_vertex(f,0)), mdt.get_vertex(mdt.get_face_vertex(f,1)), mdt.get_vertex(mdt.get_face_vertex(f,2))]
				if geo.ray_intersects_triangle(
					global_transform.origin, global_transform.origin.direction_to(point),
				current_colliding_surface.to_global(tri[0]), 
				current_colliding_surface.to_global(tri[1]), 
				current_colliding_surface.to_global(tri[2])):
					last_mdt = mdt
					analyse_mat_path(mdt.get_material())
					get_tree().get_nodes_in_group("debug_cubes")[0].global_transform.origin = current_colliding_surface.to_global(tri[0])
					get_tree().get_nodes_in_group("debug_cubes")[1].global_transform.origin = current_colliding_surface.to_global(tri[1])
					get_tree().get_nodes_in_group("debug_cubes")[2].global_transform.origin = current_colliding_surface.to_global(tri[2])
					return
			
"""

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	pass

func _physics_process(delta):
	print($GroundSurfaceChecker.get_collider().get_material())

Error: Attempt to call function 'get_material' in base 'null instance' on a null instance.

func _physics_process(delta):
	print($GroundSurfaceChecker.get_collider().get_material())

Error: Attempt to call function 'get_material' in base 'null instance' on a null instance.

Invalid call. Nonexistent function 'get_material' in base 'StaticBody3D'.